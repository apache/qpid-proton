#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Name: Proton
# Description: Qpid Proton C library
# Version: @PN_VERSION@
# URL: http://qpid.apache.org/proton/

@PACKAGE_INIT@
include("${CMAKE_CURRENT_LIST_DIR}/ProtonTargets.cmake")

set(Proton_VERSION @PN_VERSION@)

# find dependencies, because static libs don't transitively pull them
if (Proton_USE_STATIC_LIBS)
    set(CMAKE_MODULE_PATH_OLD ${CMAKE_MODULE_PATH})
    set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

    set(CyrusSASL_FOUND @CyrusSASL_FOUND@)
    if (CyrusSASL_FOUND)
        find_package (CyrusSASL REQUIRED)
    endif()

    set(OpenSSL_FOUND @OpenSSL_FOUND@)
    if (OpenSSL_FOUND)
        find_package (OpenSSL REQUIRED)
    endif()

    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH_OLD})
endif()

set (Proton_INCLUDE_DIRS @INCLUDEDIR@)
set (Proton_Core_INCLUDE_DIRS @INCLUDEDIR@)
if (NOT Proton_USE_STATIC_LIBS)
    set (Proton_LIBRARIES Proton::qpid-proton)
    set (Proton_Core_LIBRARIES Proton::qpid-proton-core)
else()
    set (Proton_LIBRARIES Proton::qpid-proton-static)
    set (Proton_Core_LIBRARIES Proton::qpid-proton-core-static)
endif()
set (Proton_FOUND True)
set (Proton_Core_FOUND True)

set (HAS_PROACTOR @HAS_PROACTOR@)
if (HAS_PROACTOR)
  set (Proton_Proactor_INCLUDE_DIRS  @INCLUDEDIR@)
  if (NOT Proton_USE_STATIC_LIBS)
    set (Proton_Proactor_LIBRARIES Proton::qpid-proton-proactor)
  else ()
    set (Proton_Proactor_LIBRARIES Proton::qpid-proton-proactor-static)
  endif ()
  set (Proton_Proactor_FOUND True)
endif()

check_required_components(Proton)
